{"ast":null,"code":"import emotion1 from \"./img/emotion1.png\";\nimport emotion2 from \"./img/emotion2.png\";\nimport emotion3 from \"./img/emotion3.png\";\nimport emotion4 from \"./img/emotion4.png\";\nimport emotion5 from \"./img/emotion5.png\";\nexport const setPageTitle = title => {\n  const titleEl = document.getElementsByTagName('title')[0];\n};\nexport const getEmotionImgById = emotionId => {\n  const targetEmotionId = String(emotionId);\n  switch (targetEmotionId) {\n    case \"1\":\n      return emotion1;\n    case \"2\":\n      return emotion2;\n    case \"3\":\n      return emotion3;\n    case \"4\":\n      return emotion4;\n    case \"5\":\n      return emotion5;\n    default:\n      return null;\n  }\n};\nexport const getFormattedDate = targetDate => {\n  let year = targetDate.getFullYear();\n  let month = targetDate.getMonth() + 1;\n  let date = targetDate.getDate();\n  if (month < 10) {\n    month = `0${month}`;\n  }\n  if (date < 10) {\n    date = `0${date}`;\n  }\n  return `${year}-${month}-${date}`;\n};\nexport const emotionList = [{\n  id: 1,\n  name: '완전 좋음',\n  img: getEmotionImgById(1)\n}, {\n  id: 2,\n  name: '좋음',\n  img: getEmotionImgById(2)\n}, {\n  id: 3,\n  name: '그럭저럭',\n  img: getEmotionImgById(3)\n}, {\n  id: 4,\n  name: '나쁨',\n  img: getEmotionImgById(4)\n}, {\n  id: 5,\n  name: '끔찍함',\n  img: getEmotionImgById(5)\n}];\nexport const getMonthRangeDate = date => {\n  const beginTimeStamp = new Date(date.getFullYear(), date.getMonth(), 1).getTime();\n  const endTimeStamp = new Date(date.getFullYear(), date.getMonth() + 1, 0, 23, 59, 59).getTime();\n  return {\n    beginTimeStamp,\n    endTimeStamp\n  };\n};","map":{"version":3,"names":["emotion1","emotion2","emotion3","emotion4","emotion5","setPageTitle","title","titleEl","document","getElementsByTagName","getEmotionImgById","emotionId","targetEmotionId","String","getFormattedDate","targetDate","year","getFullYear","month","getMonth","date","getDate","emotionList","id","name","img","getMonthRangeDate","beginTimeStamp","Date","getTime","endTimeStamp"],"sources":["C:/react/hjdiary/src/util.js"],"sourcesContent":["import emotion1 from \"./img/emotion1.png\";\r\nimport emotion2 from \"./img/emotion2.png\";\r\nimport emotion3 from \"./img/emotion3.png\";\r\nimport emotion4 from \"./img/emotion4.png\";\r\nimport emotion5 from \"./img/emotion5.png\";\r\n\r\nexport const setPageTitle = (title) => {\r\n    const titleEl = document.getElementsByTagName('title')[0];\r\n}\r\nexport const getEmotionImgById =(emotionId) => {\r\n    const targetEmotionId = String(emotionId);\r\n    switch (targetEmotionId) {\r\n        case \"1\" : return emotion1; \r\n        case \"2\" : return emotion2; \r\n        case \"3\" : return emotion3; \r\n        case \"4\" : return emotion4; \r\n        case \"5\" : return emotion5; \r\n        default : return null;\r\n    }\r\n}\r\n\r\nexport const getFormattedDate = (targetDate) => {\r\n    let year = targetDate.getFullYear();\r\n    let month = targetDate.getMonth() + 1;\r\n    let date = targetDate.getDate();\r\n    if(month <10){month = `0${month}`}\r\n    if(date <10){date = `0${date}`}\r\n    return `${year}-${month}-${date}`;\r\n}\r\n\r\nexport const emotionList = [\r\n    {id:1,name:'완전 좋음',img:getEmotionImgById(1)},\r\n    {id:2,name:'좋음',img:getEmotionImgById(2)},\r\n    {id:3,name:'그럭저럭',img:getEmotionImgById(3)},\r\n    {id:4,name:'나쁨',img:getEmotionImgById(4)},\r\n    {id:5,name:'끔찍함',img:getEmotionImgById(5)},\r\n]\r\n\r\nexport const getMonthRangeDate = (date) => {\r\n    const beginTimeStamp = new Date(date.getFullYear(),date.getMonth(),1).getTime();\r\n    const endTimeStamp = new Date(\r\n        date.getFullYear(),\r\n        date.getMonth()+1,\r\n        0,\r\n        23,\r\n        59,\r\n        59\r\n    ).getTime();\r\n    return {beginTimeStamp,endTimeStamp}\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,QAAQ,MAAM,oBAAoB;AAEzC,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC;AACD,OAAO,MAAMC,iBAAiB,GAAGC,SAAS,IAAK;EAC3C,MAAMC,eAAe,GAAGC,MAAM,CAACF,SAAS,CAAC;EACzC,QAAQC,eAAe;IACnB,KAAK,GAAG;MAAG,OAAOZ,QAAQ;IAC1B,KAAK,GAAG;MAAG,OAAOC,QAAQ;IAC1B,KAAK,GAAG;MAAG,OAAOC,QAAQ;IAC1B,KAAK,GAAG;MAAG,OAAOC,QAAQ;IAC1B,KAAK,GAAG;MAAG,OAAOC,QAAQ;IAC1B;MAAU,OAAO,IAAI;EACzB;AACJ,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAIC,UAAU,IAAK;EAC5C,IAAIC,IAAI,GAAGD,UAAU,CAACE,WAAW,CAAC,CAAC;EACnC,IAAIC,KAAK,GAAGH,UAAU,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC;EACrC,IAAIC,IAAI,GAAGL,UAAU,CAACM,OAAO,CAAC,CAAC;EAC/B,IAAGH,KAAK,GAAE,EAAE,EAAC;IAACA,KAAK,GAAG,IAAIA,KAAK,EAAE;EAAA;EACjC,IAAGE,IAAI,GAAE,EAAE,EAAC;IAACA,IAAI,GAAG,IAAIA,IAAI,EAAE;EAAA;EAC9B,OAAO,GAAGJ,IAAI,IAAIE,KAAK,IAAIE,IAAI,EAAE;AACrC,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,CACvB;EAACC,EAAE,EAAC,CAAC;EAACC,IAAI,EAAC,OAAO;EAACC,GAAG,EAACf,iBAAiB,CAAC,CAAC;AAAC,CAAC,EAC5C;EAACa,EAAE,EAAC,CAAC;EAACC,IAAI,EAAC,IAAI;EAACC,GAAG,EAACf,iBAAiB,CAAC,CAAC;AAAC,CAAC,EACzC;EAACa,EAAE,EAAC,CAAC;EAACC,IAAI,EAAC,MAAM;EAACC,GAAG,EAACf,iBAAiB,CAAC,CAAC;AAAC,CAAC,EAC3C;EAACa,EAAE,EAAC,CAAC;EAACC,IAAI,EAAC,IAAI;EAACC,GAAG,EAACf,iBAAiB,CAAC,CAAC;AAAC,CAAC,EACzC;EAACa,EAAE,EAAC,CAAC;EAACC,IAAI,EAAC,KAAK;EAACC,GAAG,EAACf,iBAAiB,CAAC,CAAC;AAAC,CAAC,CAC7C;AAED,OAAO,MAAMgB,iBAAiB,GAAIN,IAAI,IAAK;EACvC,MAAMO,cAAc,GAAG,IAAIC,IAAI,CAACR,IAAI,CAACH,WAAW,CAAC,CAAC,EAACG,IAAI,CAACD,QAAQ,CAAC,CAAC,EAAC,CAAC,CAAC,CAACU,OAAO,CAAC,CAAC;EAC/E,MAAMC,YAAY,GAAG,IAAIF,IAAI,CACzBR,IAAI,CAACH,WAAW,CAAC,CAAC,EAClBG,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAC,CAAC,EACjB,CAAC,EACD,EAAE,EACF,EAAE,EACF,EACJ,CAAC,CAACU,OAAO,CAAC,CAAC;EACX,OAAO;IAACF,cAAc;IAACG;EAAY,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}