{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\hjdiary\\\\src\\\\component\\\\DiaryList.js\",\n  _s = $RefreshSig$();\nimport \"./DiaryList.css\";\nimport Button from \"./Button\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport DiaryItem from \"./DiaryItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortOptionList = [{\n  value: 'latest',\n  name: '최신순'\n}, {\n  value: 'oldest',\n  name: '오래된순'\n}];\nconst DiaryList = ({\n  data\n}) => {\n  _s();\n  const [sortType, setSortType] = useState('latest');\n  const [sortedData, setSortedData] = useState([]);\n  useEffect(() => {\n    const compare = (a, b) => {\n      if (sortType === 'latest') {\n        return Number(b.date) - Number(a.date);\n      } else {\n        return Number(a.date) - Number(b.date);\n      }\n    };\n    const copyList = JSON.parse(JSON.stringify(data));\n    //JSON.stringify()는 인수로 전달한 객체를 문자열로 변환하는 함수\n    //SON.parse()는 문자열로 변환한 값을 다시 객체로 복구하는 함수\n    copyList.sort(compare);\n    setSortedData(copyList);\n  }, [data, sortType]);\n  const navigate = useNavigate();\n  const onChangeSortType = e => {\n    setSortType(e.target.value);\n  };\n  const onClickNew = () => {\n    navigate('/new');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryList\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left_col\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortType,\n          onChange: onChangeSortType,\n          children: sortOptionList.map((it, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: it.value,\n            children: it.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right_col\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: 'positive',\n          text: '새 일기 쓰기',\n          onClink: onClickNew\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_wrapper\",\n      children: sortedData.map(it => /*#__PURE__*/_jsxDEV(DiaryItem, {\n        ...it\n      }, it.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n_s(DiaryList, \"N5IFZOOQ7omAsF5raX5y9teRMt8=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryList;\nexport default DiaryList;\nvar _c;\n$RefreshReg$(_c, \"DiaryList\");","map":{"version":3,"names":["Button","useState","useEffect","useNavigate","DiaryItem","jsxDEV","_jsxDEV","sortOptionList","value","name","DiaryList","data","_s","sortType","setSortType","sortedData","setSortedData","compare","a","b","Number","date","copyList","JSON","parse","stringify","sort","navigate","onChangeSortType","e","target","onClickNew","className","children","onChange","map","it","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","text","onClink","id","_c","$RefreshReg$"],"sources":["C:/react/hjdiary/src/component/DiaryList.js"],"sourcesContent":["import \"./DiaryList.css\";\r\nimport Button from \"./Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DiaryItem from \"./DiaryItem\";\r\n\r\nconst sortOptionList = [\r\n    { value: 'latest', name: '최신순' },\r\n    { value: 'oldest', name: '오래된순' },\r\n]\r\nconst DiaryList = ({ data }) => {\r\n    const [sortType, setSortType] = useState('latest');\r\n    const [sortedData, setSortedData] = useState([]);\r\n    useEffect(() => {\r\n        const compare = (a, b) => {\r\n            if (sortType === 'latest') {\r\n                return Number(b.date) - Number(a.date);\r\n            } else {\r\n                return Number(a.date) - Number(b.date);\r\n            }\r\n        }\r\n        const copyList = JSON.parse(JSON.stringify(data));\r\n        //JSON.stringify()는 인수로 전달한 객체를 문자열로 변환하는 함수\r\n        //SON.parse()는 문자열로 변환한 값을 다시 객체로 복구하는 함수\r\n        copyList.sort(compare);\r\n        setSortedData(copyList);\r\n    }, [data, sortType]);\r\n\r\n    const navigate = useNavigate();\r\n    const onChangeSortType = (e) => {\r\n        setSortType(e.target.value);\r\n    }\r\n    const onClickNew = () => {\r\n        navigate('/new');\r\n    }\r\n    return <div className=\"DiaryList\">\r\n        <div className=\"menu_wrapper\">\r\n            <div className=\"left_col\">\r\n                <select value={sortType} onChange={onChangeSortType}>\r\n                    {sortOptionList.map((it, idx) => (\r\n                        <option key={idx} value={it.value}>{it.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"right_col\">\r\n                <Button type={'positive'} text={'새 일기 쓰기'} onClink={onClickNew} />\r\n            </div>\r\n        </div>\r\n        <div className=\"list_wrapper\">\r\n            {sortedData.map(it => (\r\n                <DiaryItem key={it.id} {...it} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DiaryList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}