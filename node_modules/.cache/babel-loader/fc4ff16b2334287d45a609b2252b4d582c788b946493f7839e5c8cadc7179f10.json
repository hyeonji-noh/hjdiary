{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\hjdiary\\\\src\\\\component\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport './Editor.css';\nimport { useState, useEffect, useCallback } from 'react';\nimport { getFormattedDate, emotionList } from '../util';\nimport Button from './Button';\nimport { useNavigate } from 'react-router-dom';\nimport EmotionItem from './EmotionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  initData,\n  onSubmit\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [state, setState] = useState({\n    date: getFormattedDate(new Date()),\n    emotionId: 3,\n    content: ''\n  });\n  useEffect(() => {\n    if (initData) {\n      setState({\n        ...initData,\n        date: getFormattedDate(new Date(parseInt(initData.date)))\n      });\n    }\n  }, [initData]);\n  const handleChangeDate = e => {\n    setState({\n      ...state,\n      date: e.target.value\n    });\n  };\n  const handleChangeContent = e => {\n    setState({\n      ...state,\n      content: e.target.value\n    });\n  };\n  const handleSubmit = () => {\n    onSubmit(state);\n  };\n  const handleOnGoBack = () => {\n    navigate(-1);\n  };\n  const handleChangeEmotion = useCallback(emotionId => {\n    setState(state => ({\n      ...state,\n      emotionId\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"editor_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC758 \\uB0A0\\uC9DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: state.date,\n          onChange: handleChangeDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"editor_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_wrapper emotion_list_wrapper\",\n        children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n          ...it,\n          onClick: handleChangeEmotion,\n          isSelected: state.emotionId === it.id\n        }, it.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"editor_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694?\",\n          value: state.content,\n          onChange: handleChangeContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor_section bottom_section\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: '취소하기',\n        onClink: handleOnGoBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: '작성 완료',\n        type: 'positive',\n        onClink: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"YgOisf9fiKP92Y+egt/es4T4V20=\", false, function () {\n  return [useNavigate];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["useState","useEffect","useCallback","getFormattedDate","emotionList","Button","useNavigate","EmotionItem","jsxDEV","_jsxDEV","Editor","initData","onSubmit","_s","navigate","state","setState","date","Date","emotionId","content","parseInt","handleChangeDate","e","target","value","handleChangeContent","handleSubmit","handleOnGoBack","handleChangeEmotion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","map","it","onClick","isSelected","id","placeholder","text","onClink","_c","$RefreshReg$"],"sources":["C:/react/hjdiary/src/component/Editor.js"],"sourcesContent":["import './Editor.css';\r\nimport { useState,useEffect,useCallback } from 'react';\r\nimport { getFormattedDate, emotionList } from '../util';\r\nimport Button from './Button';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport EmotionItem from './EmotionItem';\r\n\r\nconst Editor = ({ initData, onSubmit }) => {\r\n    const navigate = useNavigate();\r\n    const [state, setState] = useState({\r\n        date: getFormattedDate(new Date()),\r\n        emotionId: 3,\r\n        content: ''\r\n    });\r\n    useEffect(()=>{\r\n        if(initData) {\r\n            setState({\r\n                ...initData,\r\n                date:getFormattedDate(new Date(parseInt(initData.date)))\r\n            })\r\n        }\r\n    },[initData])\r\n    const handleChangeDate = (e) => {\r\n        setState({\r\n            ...state,\r\n            date: e.target.value,\r\n        })\r\n    }\r\n    const handleChangeContent = (e) => {\r\n        setState({\r\n            ...state,\r\n            content: e.target.value,\r\n        })\r\n    }\r\n    const handleSubmit = () => {\r\n        onSubmit(state);\r\n    }\r\n    const handleOnGoBack = () => {\r\n        navigate(-1);\r\n    }\r\n\r\n    const handleChangeEmotion = useCallback( (emotionId) => {\r\n            setState((state)=>({\r\n                ...state,\r\n                emotionId,\r\n            }))\r\n        }\r\n ,[])\r\n\r\n    return (\r\n        <div className='Editor'>\r\n            <section className='editor_section'>\r\n                <h4>오늘의 날짜</h4>\r\n                <div className='input_wrapper'>\r\n                    <input type='date' value={state.date} onChange={handleChangeDate} />\r\n                </div>\r\n            </section>\r\n            <section className='editor_section'>\r\n                <h4>오늘의 감정</h4>\r\n                <div className='input_wrapper emotion_list_wrapper'>\r\n                    {emotionList.map((it)=>(<EmotionItem \r\n                    key={it.id} {...it} onClick={handleChangeEmotion}\r\n                    isSelected={state.emotionId === it.id}\r\n                    />))}\r\n                </div>\r\n            </section>\r\n            <section className='editor_section'>\r\n                <h4>오늘의 일기</h4>\r\n                <div className='input_wrapper'>\r\n                    <textarea placeholder='오늘은 어땠나요?' value={state.content} onChange={handleChangeContent} />\r\n                </div>\r\n            </section>\r\n            <div className='editor_section bottom_section'>\r\n                <Button text={'취소하기'} onClink={handleOnGoBack} />\r\n                <Button text={'작성 완료'} type={'positive'} onClink={handleSubmit} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Editor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}