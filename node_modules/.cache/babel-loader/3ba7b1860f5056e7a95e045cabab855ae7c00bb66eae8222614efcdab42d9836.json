{"ast":null,"code":"import\"./DiaryList.css\";import Button from\"./Button\";import{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import DiaryItem from\"./DiaryItem\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const sortOptionList=[{value:'latest',name:'최신순'},{value:'oldest',name:'오래된순'}];const DiaryList=_ref=>{let{data}=_ref;const[sortType,setSortType]=useState('latest');const[sortedData,setSortedData]=useState([]);useEffect(()=>{const compare=(a,b)=>{if(sortType==='latest'){return Number(b.date)-Number(a.date);}else{return Number(a.date)-Number(b.date);}};const copyList=JSON.parse(JSON.stringify(data));//JSON.stringify()는 인수로 전달한 객체를 문자열로 변환하는 함수\n//SON.parse()는 문자열로 변환한 값을 다시 객체로 복구하는 함수\ncopyList.sort(compare);setSortedData(copyList);},[data,sortType]);const navigate=useNavigate();const onChangeSortType=e=>{setSortType(e.target.value);};const onClickNew=()=>{navigate('/new');};return/*#__PURE__*/_jsxs(\"div\",{className:\"DiaryList\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"menu_wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left_col\",children:/*#__PURE__*/_jsx(\"select\",{value:sortType,onChange:onChangeSortType,children:sortOptionList.map((it,idx)=>/*#__PURE__*/_jsx(\"option\",{value:it.value,children:it.name},idx))})}),/*#__PURE__*/_jsx(\"div\",{className:\"right_col\",children:/*#__PURE__*/_jsx(Button,{type:'positive',text:'새 일기 쓰기',onClink:onClickNew})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"list_wrapper\",children:sortedData.map(it=>/*#__PURE__*/_jsx(DiaryItem,{...it},it.id))})]});};export default DiaryList;","map":{"version":3,"names":["Button","useState","useEffect","useNavigate","DiaryItem","jsx","_jsx","jsxs","_jsxs","sortOptionList","value","name","DiaryList","_ref","data","sortType","setSortType","sortedData","setSortedData","compare","a","b","Number","date","copyList","JSON","parse","stringify","sort","navigate","onChangeSortType","e","target","onClickNew","className","children","onChange","map","it","idx","type","text","onClink","id"],"sources":["C:/react/hjdiary/src/component/DiaryList.js"],"sourcesContent":["import \"./DiaryList.css\";\r\nimport Button from \"./Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DiaryItem from \"./DiaryItem\";\r\n\r\nconst sortOptionList = [\r\n    { value: 'latest', name: '최신순' },\r\n    { value: 'oldest', name: '오래된순' },\r\n]\r\nconst DiaryList = ({ data }) => {\r\n    const [sortType, setSortType] = useState('latest');\r\n    const [sortedData, setSortedData] = useState([]);\r\n    useEffect(() => {\r\n        const compare = (a, b) => {\r\n            if (sortType === 'latest') {\r\n                return Number(b.date) - Number(a.date);\r\n            } else {\r\n                return Number(a.date) - Number(b.date);\r\n            }\r\n        }\r\n        const copyList = JSON.parse(JSON.stringify(data));\r\n        //JSON.stringify()는 인수로 전달한 객체를 문자열로 변환하는 함수\r\n        //SON.parse()는 문자열로 변환한 값을 다시 객체로 복구하는 함수\r\n        copyList.sort(compare);\r\n        setSortedData(copyList);\r\n    }, [data, sortType]);\r\n\r\n    const navigate = useNavigate();\r\n    const onChangeSortType = (e) => {\r\n        setSortType(e.target.value);\r\n    }\r\n    const onClickNew = () => {\r\n        navigate('/new');\r\n    }\r\n    return <div className=\"DiaryList\">\r\n        <div className=\"menu_wrapper\">\r\n            <div className=\"left_col\">\r\n                <select value={sortType} onChange={onChangeSortType}>\r\n                    {sortOptionList.map((it, idx) => (\r\n                        <option key={idx} value={it.value}>{it.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"right_col\">\r\n                <Button type={'positive'} text={'새 일기 쓰기'} onClink={onClickNew} />\r\n            </div>\r\n        </div>\r\n        <div className=\"list_wrapper\">\r\n            {sortedData.map(it => (\r\n                <DiaryItem key={it.id} {...it} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DiaryList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}