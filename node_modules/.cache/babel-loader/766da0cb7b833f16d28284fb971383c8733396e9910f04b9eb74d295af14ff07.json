{"ast":null,"code":"import{useContext,useEffect,useState}from\"react\";import{DiaryStateContext}from\"../App\";import{useNavigate}from\"react-router-dom\";const useDiary=id=>{const data=useContext(DiaryStateContext);const[diary,setDiary]=useState();const navigate=useNavigate();useEffect(()=>{const matchDiary=data.find(it=>String(it.id)===String(id));if(matchDiary){setDiary(matchDiary);}else{alert('일기가 존재하지 않습니다');navigate('/',{replace:true});}},[id,data]);return diary;};export default useDiary;","map":{"version":3,"names":["useContext","useEffect","useState","DiaryStateContext","useNavigate","useDiary","id","data","diary","setDiary","navigate","matchDiary","find","it","String","alert","replace"],"sources":["C:/react/hjdiary/src/hooks/useDiary.js"],"sourcesContent":["import { useContext,useEffect,useState } from \"react\";\r\nimport { DiaryStateContext } from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst useDiary = (id) => {\r\n    const data = useContext(DiaryStateContext);\r\n    const [diary,setDiary] = useState();\r\n    const navigate = useNavigate();\r\n    useEffect(()=>{\r\n        const matchDiary = data.find((it)=>String(it.id) === String(id));\r\n        if(matchDiary){\r\n            setDiary(matchDiary);\r\n        }else{\r\n            alert('일기가 존재하지 않습니다');\r\n            navigate('/',{replace:true});\r\n        }\r\n    },[id,data]);\r\n    return diary;\r\n}\r\nexport default useDiary;"],"mappings":"AAAA,OAASA,UAAU,CAACC,SAAS,CAACC,QAAQ,KAAQ,OAAO,CACrD,OAASC,iBAAiB,KAAQ,QAAQ,CAC1C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,KAAM,CAAAC,QAAQ,CAAIC,EAAE,EAAK,CACrB,KAAM,CAAAC,IAAI,CAAGP,UAAU,CAACG,iBAAiB,CAAC,CAC1C,KAAM,CAACK,KAAK,CAACC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,CAAC,CACnC,KAAM,CAAAQ,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9BH,SAAS,CAAC,IAAI,CACV,KAAM,CAAAU,UAAU,CAAGJ,IAAI,CAACK,IAAI,CAAEC,EAAE,EAAGC,MAAM,CAACD,EAAE,CAACP,EAAE,CAAC,GAAKQ,MAAM,CAACR,EAAE,CAAC,CAAC,CAChE,GAAGK,UAAU,CAAC,CACVF,QAAQ,CAACE,UAAU,CAAC,CACxB,CAAC,IAAI,CACDI,KAAK,CAAC,eAAe,CAAC,CACtBL,QAAQ,CAAC,GAAG,CAAC,CAACM,OAAO,CAAC,IAAI,CAAC,CAAC,CAChC,CACJ,CAAC,CAAC,CAACV,EAAE,CAACC,IAAI,CAAC,CAAC,CACZ,MAAO,CAAAC,KAAK,CAChB,CAAC,CACD,cAAe,CAAAH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}